{"ast":null,"code":"import _classCallCheck from \"/Users/oliviaclough/and-yet-it-compiles/magic-minutes/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/oliviaclough/and-yet-it-compiles/magic-minutes/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/oliviaclough/and-yet-it-compiles/magic-minutes/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/oliviaclough/and-yet-it-compiles/magic-minutes/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/oliviaclough/and-yet-it-compiles/magic-minutes/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/oliviaclough/and-yet-it-compiles/magic-minutes/src/components/PlanGraph.js\";\nimport React, { Component } from \"react\";\nimport { Line } from \"react-chartjs-2\";\n\nvar PlanGraph =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PlanGraph, _Component);\n\n  function PlanGraph(props) {\n    var _this;\n\n    _classCallCheck(this, PlanGraph);\n\n    fetch(\"http://colebergmann.com:5000/callPred/10\").then(function (res) {\n      return res.json();\n    }).then(function (result) {\n      _this.setState({\n        isLoaded: true,\n        items: result,\n        chartData: {\n          labels: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\"],\n          datasets: [{\n            data: result,\n            label: 'Predicted Park Crowds',\n            backgroundColor: 'rgba(0, 25, 137, .65)',\n            borderColor: 'rgba(0, 25, 137, 1)',\n            pointBorderWidth: 1,\n            pointRadius: 1,\n            pointHitRadius: 10\n          }]\n        }\n      });\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    function (error) {\n      _this.setState({\n        isLoaded: true,\n        error: error\n      });\n    });\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PlanGraph).call(this, props));\n    _this.state = {\n      error: null,\n      isLoaded: false,\n      items: [],\n      chartData: {\n        labels: [],\n        datasets: [{\n          label: 'Predicted Park Crowds',\n          backgroundColor: 'rgba(0, 25, 137, 1)',\n          borderColor: 'rgba(0, 25, 137, 1)'\n        }]\n      }\n    };\n    return _this;\n  }\n\n  _createClass(PlanGraph, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Line, {\n        data: this.state.chartData,\n        options: {\n          title: {\n            display: true,\n            text: \"Predicted Park Crowds\",\n            fontFamily: 'Cabin',\n            fontColor: 'black',\n            fontSize: 30\n          },\n          legend: {\n            display: false,\n            position: 'right'\n          },\n          scales: {\n            yAxes: [{\n              scaleLabel: {\n                display: true,\n                labelString: 'Anticipated Crowds',\n                fontSize: 15,\n                fontFamily: 'Cabin'\n              },\n              ticks: {\n                beginAtZero: true\n              }\n            }],\n            xAxes: [{\n              scaleLabel: {\n                display: true,\n                labelString: 'Days in the future',\n                fontSize: 15,\n                fontFamily: 'Cabin'\n              }\n            }]\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return PlanGraph;\n}(Component);\n\nexport default PlanGraph;","map":{"version":3,"sources":["/Users/oliviaclough/and-yet-it-compiles/magic-minutes/src/components/PlanGraph.js"],"names":["React","Component","Line","PlanGraph","props","fetch","then","res","json","result","setState","isLoaded","items","chartData","labels","datasets","data","label","backgroundColor","borderColor","pointBorderWidth","pointRadius","pointHitRadius","error","state","title","display","text","fontFamily","fontColor","fontSize","legend","position","scales","yAxes","scaleLabel","labelString","ticks","beginAtZero","xAxes"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\nimport {Line} from \"react-chartjs-2\"\n\n\nclass PlanGraph extends Component{\n\tconstructor(props){\n\t\tfetch(\"http://colebergmann.com:5000/callPred/10\")\n\t      .then(res => res.json())\n\t      .then(\n\t        (result) => {\n\t          this.setState({\n\t            isLoaded: true,\n\t            items: result,\n\t            chartData:{\n\t\t\t\t\tlabels: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\"],\n\t            \tdatasets:[\n\t            \t\t{\n\t            \t\t\tdata: result,\n\t\t\t\t\t\t\tlabel:'Predicted Park Crowds', \n      \t\t\t\t\t\tbackgroundColor: 'rgba(0, 25, 137, .65)',\n      \t\t\t\t\t\tborderColor: 'rgba(0, 25, 137, 1)',\n      \t\t\t\t\t\tpointBorderWidth: 1,\n      \t\t\t\t\t\tpointRadius: 1,\n      \t\t\t\t\t\tpointHitRadius: 10\n\t            \t\t}\n\t            \t],\n\t            }\n\t          });\n\t        },\n\t        // Note: it's important to handle errors here\n\t        // instead of a catch() block so that we don't swallow\n\t        // exceptions from actual bugs in components.\n\t        (error) => {\n\t          this.setState({\n\t            isLoaded: true,\n\t            error\n\t          });\n\t        }\n\t      )\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\terror: null,\n\t      \tisLoaded: false,\n\t      \titems: [],\n\t\t\tchartData:{\n\t\t\tlabels: [],\n\t\t\t\tdatasets: [\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel:'Predicted Park Crowds', \n\t\t\t\t\t\tbackgroundColor: 'rgba(0, 25, 137, 1)',\n      \t\t\t\t\tborderColor: 'rgba(0, 25, 137, 1)',\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t}\n\t}\n\n\trender(){\n\t\treturn(\n\t\t\t<div className = \"chart\">\n\t\t\t\t<Line\n\t\t\t\t\tdata={this.state.chartData}\n\t\t\t\t\toptions={{\n\t\t\t\t\t\ttitle: {\n\t\t\t\t\t\t\tdisplay:true,\n\t\t\t\t\t\t\ttext:\"Predicted Park Crowds\",\n\t\t\t\t\t\t\tfontFamily: 'Cabin',\n\t\t\t\t\t\t\tfontColor: 'black',\n\t\t\t\t\t\t\tfontSize:30\n\t\t\t\t\t\t},\n\t\t\t\t\t\tlegend:{\n\t\t\t\t\t\t\tdisplay: false,\n\t\t\t\t\t\t\tposition: 'right'\n\t\t\t\t\t\t},\n\t\t\t\t\t\tscales: {\n            \t\t\t\tyAxes: [{\n            \t\t\t\t\tscaleLabel: {\n            \t\t\t\t\t\tdisplay: true,\n            \t\t\t\t\t\tlabelString: 'Anticipated Crowds',\n            \t\t\t\t\t\tfontSize: 15,\n            \t\t\t\t\t\tfontFamily: 'Cabin'\n            \t\t\t\t\t},\n                \t\t\t\tticks: {\n                    \t\t\t\tbeginAtZero: true\n\t\t\t\t                }\n\t\t\t\t            }],\n\t\t\t\t            xAxes: [{\n\t\t\t\t            \tscaleLabel: {\n\t\t\t\t            \t\tdisplay:true,\n\t\t\t\t            \t\tlabelString: 'Days in the future',\n\t\t\t\t            \t\tfontSize: 15,\n\t\t\t\t            \t\tfontFamily: 'Cabin'\n\t\t\t\t            \t}\n\t\t\t\t            }]\n\n\t\t\t\t        }\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n\nexport default PlanGraph"]},"metadata":{},"sourceType":"module"}